{"version":3,"sources":["webpack:///./src/components/PostListing.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/logo.svg","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["PostListing","_ref","post","react_default","a","createElement","gatsby_browser_entry","to","fields","slug","frontmatter","title","date","excerpt","IndexPage","data","location","layout","allMarkdownRemark","edges","map","_ref2","node","components_PostListing","key","id","query","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","HeaderWrapper","styled","div","withConfig","displayName","componentId","isHome","HeaderContainer","MainNav","nav","Header","componentDidUpdate","prevProps","prevState","_this","wrapper","animate","height","duration","fill","easing","iterations","_this2","this","_this$props","ref","ReactDOM","findDOMNode","style","margin","color","textDecoration","fontSize","src","logo","alt","gatsby_image_default","position","left","top","width","opacity","fluid","background","childImageSharp","Component","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header_Header","maxWidth","padding","paddingTop","_1382998565"],"mappings":"6IAaeA,EAVK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAClBC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,GAAIL,EAAKM,OAAOC,MAAOP,EAAKQ,YAAYC,QAEhDR,EAAAC,EAAAC,cAAA,YAAOH,EAAKQ,YAAYE,MACxBT,EAAAC,EAAAC,cAAA,SAAIH,EAAKW,+CCMEC,UAXG,SAAAb,GAAwB,IAArBc,EAAqBd,EAArBc,KAAMC,EAAef,EAAfe,SACzB,OACAb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQD,SAAUA,GAChBb,EAAAC,EAAAC,cAAA,kBACCU,EAAKG,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCnB,EAAAC,EAAAC,cAACkB,EAAD,CAAcC,IAAKF,EAAKG,GAAIvB,KAAMoB,QALxC,IAaaI,EAAK,8CCjBlBC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAApC,IAAAuB,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAAtC,IAAA,IAAAuC,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAAa,GAAK,OACvBX,EAAA/B,EAAAC,cAAC2B,EAAmBe,SAApB,KACG,SAAAC,GACC,OACEF,EAAM/B,MACLiC,EAAgBF,EAAMpB,QAAUsB,EAAgBF,EAAMpB,OAAOX,MAEtD+B,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAM/B,KAAO+B,EAAM/B,KAAKA,KAAOiC,EAAgBF,EAAMpB,OAAOX,MAGvDoB,EAAA/B,EAAAC,cAAA,uCAaf,SAAS0B,IACP,MAAM,IAAIoB,MACR,gVATJlB,EAAYmB,UAAY,CACtBrC,KAAMsC,IAAUC,OAChB5B,MAAO2B,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qnDCMzCK,EAAmB,SAAA9D,GAAkB,IAAfe,EAAef,EAAfe,SACpBgD,EAAgBC,UAAOC,4BAA4BlD,EAASmD,UAClE,OAAOvB,IAAMvC,cAAc+D,IAApBC,OAAAC,OAAA,CACLtD,WACAgD,iBACGA,EAAcO,QAIrBR,EAAiBX,UAAY,CAC3BpC,SAAUqC,IAAUmB,MAAM,CACxBL,SAAUd,IAAUE,OAAOC,aAC1BA,YAGUO,iCCrBfJ,EAAAC,QAAiBjC,EAAA8C,EAAuB,iQCQlCC,EAAgBC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAGJ,CAAH,gHAKP,SAAA1E,GAAA,OAAAA,EAAG+E,OAAuB,OAAS,SAQzCC,EAAkBN,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAGJ,CAAH,qIAUfO,EAAUP,IAAOQ,IAAVN,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAGJ,CAAH,4QAmBQS,sJACnBC,mBAAqB,SAACC,EAAWC,GACVC,EAAK1C,MAAlB9B,SACKmD,WAAamB,EAAUtE,SAASmD,WACN,MAAjCqB,EAAK1C,MAAM9B,SAASmD,SACtBqB,EAAKC,QAAQC,QAAQ,CAAC,CAAEC,OAAQ,QAAU,CAAEA,OAAQ,SAAW,CAC7DC,SAAU,IACVC,KAAM,WACNC,OAAQ,iCACRC,WAAY,IAGdP,EAAKC,QAAQC,QAAQ,CAAC,CAAEC,OAAQ,QAAU,CAAEA,OAAQ,SAAW,CAC7DC,SAAU,IACVC,KAAM,WACNC,OAAQ,iCACRC,WAAY,oCAMpB9C,kBAAS,IAAA+C,EAAAC,KAAAC,EACoBD,KAAKnD,MAAxB/B,EADDmF,EACCnF,KADDmF,EACOlF,SACd,OACEb,EAAAC,EAAAC,cAACqE,EAAD,CACEM,OAAyC,MAAjCiB,KAAKnD,MAAM9B,SAASmD,SAC5BgC,IAAK,SAAAV,GAAO,OAAKO,EAAKP,QAAUW,IAASC,YAAYZ,KAErDtF,EAAAC,EAAAC,cAAC4E,EAAD,KACE9E,EAAAC,EAAAC,cAAA,MAAIiG,MAAO,CAAEC,OAAQ,IACnBpG,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEC,GAAG,IACH+F,MAAO,CACLE,MAAO,QACPC,eAAgB,OAChBC,SAAU,SAGZvG,EAAAC,EAAAC,cAAA,OAAKsG,IAAKC,IAAMC,IAAI,oBAIxB1G,EAAAC,EAAAC,cAAC6E,EAAD,KACE/E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,GAAG,KAAT,SAEFJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,GAAG,UAAT,aAKNJ,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CACEkG,MAAO,CACLS,SAAU,WACVC,KAAM,EACNC,IAAK,EACLC,MAAO,OACPvB,OAAQ,OACRwB,QAAS,OAEXC,MAAOrG,EAAKsG,WAAWC,gBAAgBF,aA/DfxE,IAAM2E,WC1CpCC,UAAS,SAAAvH,GAA4B,IAAzBiD,EAAyBjD,EAAzBiD,SAAUlC,EAAef,EAAfe,SAE1B,OACAb,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEoB,MAAK,aAgBLuB,OAAQ,SAAAlC,GAAI,OACVZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqH,SAAA,KACEtH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CACEO,MAAOI,EAAK4G,KAAKC,aAAajH,MAC9BkH,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,UAChC,CAAED,KAAM,WAAYC,QAAS,uBAG/B5H,EAAAC,EAAAC,cAAA,QAAM2H,KAAK,QAEb7H,EAAAC,EAAAC,cAAC4H,EAAD,CAAQlH,KAAMA,EAAMC,SAAUA,IAC9Bb,EAAAC,EAAAC,cAAA,OACEiG,MAAO,CACLC,OAAQ,SACR2B,SAAU,IACVC,QAAS,wBACTC,WAAY,IAIblF,KAtCTnC,KAAAsH,MA6CFb,EAAOpE,UAAY,CACjBF,SAAUG,IAAU/B,KAAKkC,YAGZgE","file":"component---src-pages-index-js-5ecfd1cc31b49a561f19.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'gatsby'\n\nconst PostListing = ({ post }) => (\n  <article>\n    <h3>\n      <Link to={post.fields.slug}>{post.frontmatter.title}</Link>\n    </h3>\n    <span>{post.frontmatter.date}</span>\n    <p>{post.excerpt}</p>\n  </article>\n);\n\nexport default PostListing;","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport PostListing from '../components/PostListing';\nconst IndexPage = ({ data, location }) => {\n  return (\n  <Layout location={location}>\n    <h1>Post</h1>\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <PostListing  key={node.id} post={node} />\n    ))}\n  </Layout>\n)}\n\n// const PostListing = () => <div> hello</div>\nexport default IndexPage\n\nexport const query = graphql`\n  query SiteMeta {\n    site {\n      siteMetadata {\n        title\n        desc\n      }\n    }\n    allMarkdownRemark(sort:{\n      fields:[frontmatter___date]\n      order: DESC\n    }){\n      edges {\n        node{\n          id\n          fileAbsolutePath\n          rawMarkdownBody\n          timeToRead\n          excerpt(pruneLength: 240)\n          html\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD YYYY\")\n            _PARENT\n          }\n          fields {\n            slug\n          }\n          internal {\n            content\n            type\n            contentDigest\n            owner\n          }\n        }\n      }\n    }\n  }\n`;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-7665f742d9402c726ad0cd313e098ef8.svg\";","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport logo from '../images/logo.svg'\nimport Img from 'gatsby-image'\n\n\nconst HeaderWrapper = styled.div`\n  background: #524763;\n  margin-bottom: 1.45rem;\n  overflow: hidden;\n  position: relative;\n  height: ${({ isHome }) => (isHome ? \"70vh\" : \"20vh\")};\n  h1 {\n    img {\n      height: 80px;\n    }\n  }\n`;\n\nconst HeaderContainer = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1.45rem 1.0875rem;\n  position: relative;\n  z-index: 2;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst MainNav = styled.nav`\n  ul {\n    list-style: none;\n    display: flex;\n    li {\n      margin-left: 10px;\n      font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n        Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n      a {\n        text-decoration: none;\n        color: #fff;\n        &:hover {\n          border-bottom: 3px solid #524763;\n        }\n      }\n    }\n  }\n`;\n\nexport default class Header extends React.Component {\n  componentDidUpdate = (prevProps, prevState) => {\n    const { location } = this.props;\n    if (location.pathname !== prevProps.location.pathname) {\n      if (this.props.location.pathname === \"/\") {\n        this.wrapper.animate([{ height: \"20vh\" }, { height: \"70vh\" }], {\n          duration: 300,\n          fill: \"forwards\",\n          easing: \"cubic-bezier(0.86, 0, 0.07, 1)\",\n          iterations: 1\n        });\n      } else {\n        this.wrapper.animate([{ height: \"70vh\" }, { height: \"20vh\" }], {\n          duration: 300,\n          fill: \"forwards\",\n          easing: \"cubic-bezier(0.86, 0, 0.07, 1)\",\n          iterations: 1\n        });\n      }\n    }\n  };\n\n  render() {\n    const { data, location } = this.props;\n    return (\n      <HeaderWrapper\n        isHome={this.props.location.pathname === \"/\"}\n        ref={wrapper => (this.wrapper = ReactDOM.findDOMNode(wrapper))}\n      >\n        <HeaderContainer>\n          <h1 style={{ margin: 0 }}>\n            <Link\n              to=\"/\"\n              style={{\n                color: \"white\",\n                textDecoration: \"none\",\n                fontSize: '20px'\n              }}\n            >\n              <img src={logo} alt=\"Level Up Logo\" />\n              {/* Vikash */}\n            </Link>\n          </h1>\n          <MainNav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/about\">About</Link>\n              </li>\n            </ul>\n          </MainNav>\n        </HeaderContainer>\n          <Img \n            style={{\n              position: \"absolute\",\n              left: 0,\n              top: 0,\n              width: \"100%\",\n              height: \"100%\",\n              opacity: \"0.3\"\n            }}\n            fluid={data.background.childImageSharp.fluid} \n          />\n      </HeaderWrapper>\n    );\n  }\n}\n\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children, location }) => {\n  // consol\n  return (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n        background: file(relativePath: { eq: \"bg.jpeg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000 , grayscale: true) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header data={data} location={location}/>\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {/* {location} */}\n          {children}\n        </div>\n      </>\n    )}\n  />\n)}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}